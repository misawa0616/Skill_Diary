
●12月5日

・ファイル作成プログラム
------------------------------------------------------------------------

import csv

a = []
with open('C:\\Users\\81805\\Desktop\\Skill_Diary\\a.csv', 'r') as csv_file:
    reader = csv.DictReader(csv_file)
    for row in reader:
        a.append(row['DAY'])

d = []
for b in a:
    c = b.replace('/', '-')
    d.append(c)

for e in d:
    with open("C:\\Users\\81805\\Desktop\\Skill_Diary\\" + '{}.txt'.format(e),
              'w') as text:
        text.write('<BlockChain>')
        text.write('\n')
        text.write('\n')
        text.write('<AI>')
        text.write('\n')
        text.write('\n')
        text.write('<English>')
        text.write('\n')
        text.write('\n')
        text.write('<Bot>')
        text.write('\n')
        text.write('\n')
        text.write('<Law>')
        text.write('\n')
        text.write('\n')
        text.write('<Work>')
        text.write('\n')
        text.write('\n')
        text.write('<Python>')

http://python-remrin.hatenadiary.jp/entry/2017/05/02/182203
------------------------------------------------------------------------


・pythonの環境は移行できることを知る。
------------------------------------------------------------------------

〇旧環境
pip freeze > requirements.txt

〇新環境
pip install -r requirements.txt

------------------------------------------------------------------------



●12月15日


・udemy 自然言語とチャットボックス
------------------------------------------------------------------------
セクション3 pythonの基礎1

a = 3; b = 4
d = a < b
print(d)
はTrueを表す。大なり小なりを含め代入した場合、TrueかFalseを表す
※"大きい数字を代入する"というわけではないので注意。勘違いしていた。
------------------------------------------------------------------------



●12月16日

・Flask
------------------------------------------------------------------------
〇任意のデータを引数として受け取る方法。

FlaskではURLの一部をパス変数として、引数で受け取ることができる。

・例
@app.route('/employee/<name>', methods=['GET'])
def emploee(name=None):

https://qiita.com/5zm/items/c8384aa7b7aae924135c
------------------------------------------------------------------------


・udemy 自然言語とチャットボックス
------------------------------------------------------------------------
〇セクション3 pythonの基礎1
+や-などを算術演算子、<や=などを比較演算子、andやnotなどを論述演算子という。

〇タプルを用いて、複数の引数を一度に渡す。

def add(a, b ,c):
    d = a + b + c
    print(d)

e = (1, 2, 3)
add(*e)           # 複数の引数を一度に渡す

〇matplotlib
グラフを描画する場合、plot
散布図を描画する場合、scatter
画像を表示する場合、imshow
------------------------------------------------------------------------


●12月17日

・udemy 自然言語とチャットボックス
------------------------------------------------------------------------
〇セクション6 Pythonにおける正規表現,コーパスの前処理

正規表現を使う際には、reを使用する。

re.sub … 置換を行うことができる。

1. subによる置換。　re.sub("変換前", "変換後", 変換前変数)
	s = "変換前です。"
	print(s)
	s = re.sub("変換前", "変換後", s)
	print(s)

	変換前です。
	変換後です。


2. []内の各文字(複数)を特定の文字に置き換える。 re.sub("[変換前]", "変換後", 変換前変数)
	s = "犬です。猫です"
	print(s)
	s = re.sub("[犬猫]", "動物", s)
	print(s)

	犬です。猫です
	動物です。動物です


3. ある特定の文字以外を置き換える(否定)。 re.sub("[^変換したくない文字]", "変換後", 変換前変数)
	s = "私は黒犬と白猫が好きです。"
	s = re.sub("[^犬猫]", "馬", s)
	print(s)

	馬馬馬犬馬馬猫馬馬馬馬馬馬

4. 文字を1回以上繰り返して表現する。 re.sub("変換前+", "変換後", 変換前変数)
	s = "私は柴犬犬犬犬犬犬犬犬犬犬犬犬犬が好きです。"
	s = re.sub("犬+", "犬", s)
	print(s)

	私は柴犬が好きです。

------------------------------------------------------------------------



●12月19日

・リストとnumpy
------------------------------------------------------------------------

gm5 = [1, 2]
gm6 = [3, 4]

gm7 = gm5 + gm6
print(gm7)

gm5 = np.array(gm5)
gm6 = np.array(gm6)

gm7 = gm5 + gm6
print(gm7)


[1, 2, 3, 4]
[4 6]

リストとnumpyで+の処理が異なる。

------------------------------------------------------------------------

・リスト
------------------------------------------------------------------------

gm1 = [1,2,3,4,5]
gm2 = gm1[1:4]
gm3 = gm1[4]
print(gm2)
print(gm3)


[2, 3, 4]
5

[n:m]は、nからm-1のインデックスの値を表示する。
------------------------------------------------------------------------

・・リスト
------------------------------------------------------------------------

gm1 = np.array([[1,3], [2, 4]])
print(gm1[0, 1])

3

[n, m]は、2次元はn,1次元はmということ。

------------------------------------------------------------------------

・学習時間
------------------------------------------------------------------------

start_time = time.time()
print("学習時間 --LSTM--:", time.time() - start_time)
------------------------------------------------------------------------


●12月24日

------------------------------------------------------------------------
https://stackoverflow.com/questions/33101935/convert-pil-image-to-byte-array
------------------------------------------------------------------------



●12月26日
------------------------------------------------------------------------
https://udomomo.hatenablog.com/entry/2018/08/14/234153

https://codor.co.jp/django/how-to-use-redirect

https://python.keicode.com/django/form-validation.php
https://eiry.bitbucket.io/tutorials/guest_board/models.html


from .xxx import yyy
form xxx import yyy

.xxxは現在のディレクトリから探しに行く。
xxxはパスを通した環境から探しに行く。
------------------------------------------------------------------------


●12月30日
------------------------------------------------------------------------
・django
urls path
Class based viewの場合、as_viewをつける。

django-admin startproject プロジェクト名
python3 manage.py startapp アプリ名

https://docs.djangoproject.com/ja/3.0/intro/tutorial01/

------------------------------------------------------------------------

●1月7日
------------------------------------------------------------------------
https://docs.djangoproject.com/ja/3.0/howto/static-files/

https://docs.djangoproject.com/ja/3.0/topics/auth/default/

https://getbootstrap.com/docs/4.4/examples/sign-in/

view-source:https://getbootstrap.com/docs/4.4/examples/sign-in/

https://yukimonkey.com/js-python/like-button/
------------------------------------------------------------------------